{"ast":null,"code":"const sendPrivateValue = (stompClient, userData, tab, setPrivateChats, setUserData) => {\n  if (stompClient) {\n    let chatMessage = {\n      senderName: userData.username,\n      receiverName: tab,\n      message: userData.message,\n      status: \"MESSAGE\"\n    };\n\n    if (userData.username !== tab) {\n      setPrivateChats(prevPrivateChats => {\n        const updatedPrivateChats = new Map(prevPrivateChats);\n\n        if (updatedPrivateChats.has(tab)) {\n          let existingMessages = updatedPrivateChats.get(tab);\n          let updatedMessages = existingMessages.concat(chatMessage);\n          updatedPrivateChats.set(tab, updatedMessages);\n        }\n\n        return updatedPrivateChats;\n      });\n    }\n\n    stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n    setUserData({ ...userData,\n      \"message\": \"\"\n    });\n  }\n};\n\nexport default sendPrivateValue;","map":{"version":3,"sources":["/home/jgomesh/WORKWORK/ChatApplication/react-client/src/utils/sendPrivateValue.js"],"names":["sendPrivateValue","stompClient","userData","tab","setPrivateChats","setUserData","chatMessage","senderName","username","receiverName","message","status","prevPrivateChats","updatedPrivateChats","Map","has","existingMessages","get","updatedMessages","concat","set","send","JSON","stringify"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAACC,WAAD,EAAcC,QAAd,EAAwBC,GAAxB,EAA6BC,eAA7B,EAA8CC,WAA9C,KAA8D;AACrF,MAAIJ,WAAJ,EAAiB;AACf,QAAIK,WAAW,GAAG;AAChBC,MAAAA,UAAU,EAAEL,QAAQ,CAACM,QADL;AAEhBC,MAAAA,YAAY,EAAEN,GAFE;AAGhBO,MAAAA,OAAO,EAAER,QAAQ,CAACQ,OAHF;AAIhBC,MAAAA,MAAM,EAAE;AAJQ,KAAlB;;AAOA,QAAIT,QAAQ,CAACM,QAAT,KAAsBL,GAA1B,EAA+B;AAC7BC,MAAAA,eAAe,CAAEQ,gBAAD,IAAsB;AACpC,cAAMC,mBAAmB,GAAG,IAAIC,GAAJ,CAAQF,gBAAR,CAA5B;;AACA,YAAIC,mBAAmB,CAACE,GAApB,CAAwBZ,GAAxB,CAAJ,EAAkC;AAChC,cAAIa,gBAAgB,GAAGH,mBAAmB,CAACI,GAApB,CAAwBd,GAAxB,CAAvB;AACA,cAAIe,eAAe,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBb,WAAxB,CAAtB;AACAO,UAAAA,mBAAmB,CAACO,GAApB,CAAwBjB,GAAxB,EAA6Be,eAA7B;AACD;;AACD,eAAOL,mBAAP;AACD,OARc,CAAf;AASD;;AACDZ,IAAAA,WAAW,CAACoB,IAAZ,CAAiB,sBAAjB,EAAyC,EAAzC,EAA6CC,IAAI,CAACC,SAAL,CAAejB,WAAf,CAA7C;AACAD,IAAAA,WAAW,CAAC,EAAE,GAAGH,QAAL;AAAe,iBAAW;AAA1B,KAAD,CAAX;AACD;AACF,CAvBD;;AAyBA,eAAeF,gBAAf","sourcesContent":["const sendPrivateValue = (stompClient, userData, tab, setPrivateChats, setUserData) => {\n  if (stompClient) {\n    let chatMessage = {\n      senderName: userData.username,\n      receiverName: tab,\n      message: userData.message,\n      status: \"MESSAGE\"\n    };\n\n    if (userData.username !== tab) {\n      setPrivateChats((prevPrivateChats) => {\n        const updatedPrivateChats = new Map(prevPrivateChats);\n        if (updatedPrivateChats.has(tab)) {\n          let existingMessages = updatedPrivateChats.get(tab);\n          let updatedMessages = existingMessages.concat(chatMessage);\n          updatedPrivateChats.set(tab, updatedMessages);\n        }\n        return updatedPrivateChats;\n      });\n    }\n    stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n    setUserData({ ...userData, \"message\": \"\" });\n  }\n};\n\nexport default sendPrivateValue;\n"]},"metadata":{},"sourceType":"module"}