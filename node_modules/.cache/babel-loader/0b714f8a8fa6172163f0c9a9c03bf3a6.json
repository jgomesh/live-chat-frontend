{"ast":null,"code":"import transformArrayToMap from \"./transformArrayToMap\";\nimport { register, getPublic, getPrivate } from \"../api/requests\";\n\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats, userData) => {\n  try {\n    const registerResponse = await register(userData.username);\n    const publicResponse = await getPublic();\n    const privateResponse = await getPrivate(userData.username);\n    const publicChatData = publicResponse.data.map(publicMessage => ({ ...publicMessage,\n      status: \"MESSAGE\",\n      receiverName: null\n    }));\n    const privateChatData = privateResponse.data;\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;","map":{"version":3,"sources":["/home/jgomesh/WORKWORK/ChatApplication/react-client/src/utils/registerUser.js"],"names":["transformArrayToMap","register","getPublic","getPrivate","registerUser","connectWebSocket","setPublicChats","setPrivateChats","userData","registerResponse","username","publicResponse","privateResponse","publicChatData","data","map","publicMessage","status","receiverName","privateChatData","MapPrivateChat","error","console","log","message"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,iBAAhD;;AACA,MAAMC,YAAY,GAAG,OAAOC,gBAAP,EAAyBC,cAAzB,EAAyCC,eAAzC,EAA0DC,QAA1D,KAAuE;AAC1F,MAAI;AACF,UAAMC,gBAAgB,GAAG,MAAMR,QAAQ,CAACO,QAAQ,CAACE,QAAV,CAAvC;AACA,UAAMC,cAAc,GAAG,MAAMT,SAAS,EAAtC;AACA,UAAMU,eAAe,GAAG,MAAMT,UAAU,CAACK,QAAQ,CAACE,QAAV,CAAxC;AACA,UAAMG,cAAc,GAAGF,cAAc,CAACG,IAAf,CAAoBC,GAApB,CAAyBC,aAAD,KAAoB,EAAE,GAAGA,aAAL;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,YAAY,EAAE;AAArD,KAApB,CAAxB,CAAvB;AACA,UAAMC,eAAe,GAAGP,eAAe,CAACE,IAAxC;AAEA,UAAMM,cAAc,GAAGpB,mBAAmB,CAACmB,eAAD,EAAkBX,QAAlB,CAA1C;AACAF,IAAAA,cAAc,CAACO,cAAD,CAAd;AACAN,IAAAA,eAAe,CAACa,cAAD,CAAf;AACAf,IAAAA,gBAAgB;AACjB,GAXD,CAWE,OAAOgB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAfD;;AAiBA,eAAepB,YAAf","sourcesContent":["import transformArrayToMap from \"./transformArrayToMap\";\nimport { register, getPublic, getPrivate } from \"../api/requests\";\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats, userData) => {\n  try {\n    const registerResponse = await register(userData.username);\n    const publicResponse = await getPublic();\n    const privateResponse = await getPrivate(userData.username);\n    const publicChatData = publicResponse.data.map((publicMessage) => ({ ...publicMessage, status: \"MESSAGE\", receiverName: null }));\n    const privateChatData = privateResponse.data;\n\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;\n"]},"metadata":{},"sourceType":"module"}