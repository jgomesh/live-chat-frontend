{"ast":null,"code":"import axios from \"axios\";\nimport api_data from \"./config\";\nconst config = {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n  }\n};\nconst {\n  URL,\n  PORT\n} = api_data;\nexport const register = async username => {\n  try {\n    const registerResponse = await axios.post(`http://${URL}:${PORT}/chat-user-register`, {\n      name: username\n    }, config);\n    return registerResponse;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const getPublic = async () => {\n  try {\n    const publicResponse = await axios.get(`http://${URL}:${PORT}/messages/public`, config);\n    return publicResponse;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const getPrivate = async username => {\n  try {\n    const privateResponse = await axios.get(`http://${URL}:${PORT}/messages/private/` + username, config);\n    return privateResponse;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const findFriend = async friendName => {\n  try {\n    const friendResponse = await axios.get(`http://${URL}:${PORT}/chat-user-register/user/` + friendName, config);\n    return friendResponse;\n  } catch (error) {\n    return error.message;\n  }\n};","map":{"version":3,"sources":["/home/jgomesh/WORKWORK/ChatApplication/react-client/src/api/requests.js"],"names":["axios","api_data","config","headers","URL","PORT","register","username","registerResponse","post","name","error","message","getPublic","publicResponse","get","getPrivate","privateResponse","findFriend","friendName","friendResponse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,mCAA+B,GADxB;AAEP,oCAAgC;AAFzB;AADI,CAAf;AAOA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,IAAgBJ,QAAtB;AAEA,OAAO,MAAMK,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AAC1C,MAAI;AACF,UAAMC,gBAAgB,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAY,UAASL,GAAI,IAAGC,IAAK,qBAAjC,EAAuD;AAAEK,MAAAA,IAAI,EAAEH;AAAR,KAAvD,EAA2EL,MAA3E,CAA/B;AACA,WAAOM,gBAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,YAAY;AACnC,MAAI;AACF,UAAMC,cAAc,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,UAASX,GAAI,IAAGC,IAAK,kBAAhC,EAAmDH,MAAnD,CAA7B;AACA,WAAOY,cAAP;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAPM;AASP,OAAO,MAAMI,UAAU,GAAG,MAAOT,QAAP,IAAoB;AAC5C,MAAI;AACF,UAAMU,eAAe,GAAG,MAAMjB,KAAK,CAACe,GAAN,CAAW,UAASX,GAAI,IAAGC,IAAK,oBAAtB,GAA4CE,QAAtD,EAAgEL,MAAhE,CAA9B;AACA,WAAOe,eAAP;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAPM;AASP,OAAO,MAAMM,UAAU,GAAG,MAAOC,UAAP,IAAsB;AAC9C,MAAI;AACF,UAAMC,cAAc,GAAG,MAAMpB,KAAK,CAACe,GAAN,CAAW,UAASX,GAAI,IAAGC,IAAK,2BAAtB,GAAmDc,UAA7D,EAAyEjB,MAAzE,CAA7B;AACA,WAAOkB,cAAP;AACD,GAHD,CAGE,OAAOT,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAPM","sourcesContent":["import axios from \"axios\";\nimport api_data from \"./config\";\n\nconst config = {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n  }\n};\n\nconst { URL, PORT } = api_data;\n\nexport const register = async (username) => {\n  try {\n    const registerResponse = await axios.post(`http://${URL}:${PORT}/chat-user-register`, { name: username }, config);\n    return registerResponse\n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getPublic = async () => {\n  try {\n    const publicResponse = await axios.get(`http://${URL}:${PORT}/messages/public`, config);\n    return publicResponse;\n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getPrivate = async (username) => {\n  try {\n    const privateResponse = await axios.get(`http://${URL}:${PORT}/messages/private/` + username, config);\n    return privateResponse;\n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const findFriend = async (friendName) => {\n  try {\n    const friendResponse = await axios.get(`http://${URL}:${PORT}/chat-user-register/user/` + friendName, config);\n    return friendResponse;\n  } catch (error) {\n    return error.message;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}