{"ast":null,"code":"import transformArrayToMap from \"./transformArrayToMap\";\nimport axios from \"axios\";\n\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats, userData) => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    };\n    const registerResponse = await axios.post(\"http://localhost:8080/chat-user-register\", {\n      name: userData.username\n    }, config);\n    const publicResponse = await axios.get(\"http://localhost:8080/messages/public\", config);\n    const privateResponse = await axios.get(\"http://localhost:8080/messages/private/\" + userData.username, config);\n    const publicChatData = publicResponse.data.map(publicMessage => ({ ...publicMessage,\n      status: \"MESSAGE\",\n      receiverName: null\n    }));\n    const privateChatData = privateResponse.data;\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;","map":{"version":3,"sources":["/home/jgomesh/WORKWORK/ChatApplication/react-client/src/utils/registerUser.js"],"names":["transformArrayToMap","axios","registerUser","connectWebSocket","setPublicChats","setPrivateChats","userData","config","headers","registerResponse","post","name","username","publicResponse","get","privateResponse","publicChatData","data","map","publicMessage","status","receiverName","privateChatData","MapPrivateChat","error","console","log","message"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,YAAY,GAAG,OAAOC,gBAAP,EAAyBC,cAAzB,EAAyCC,eAAzC,EAA0DC,QAA1D,KAAuE;AAC1F,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wCAAgC;AAFzB;AADI,KAAf;AAMA,UAAMC,gBAAgB,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,0CAAX,EAAuD;AAAEC,MAAAA,IAAI,EAAEL,QAAQ,CAACM;AAAjB,KAAvD,EAAoFL,MAApF,CAA/B;AACA,UAAMM,cAAc,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,uCAAV,EAAmDP,MAAnD,CAA7B;AACA,UAAMQ,eAAe,GAAG,MAAMd,KAAK,CAACa,GAAN,CAAU,4CAA4CR,QAAQ,CAACM,QAA/D,EAAyEL,MAAzE,CAA9B;AACA,UAAMS,cAAc,GAAGH,cAAc,CAACI,IAAf,CAAoBC,GAApB,CAAyBC,aAAD,KAAoB,EAAE,GAAGA,aAAL;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,YAAY,EAAE;AAArD,KAApB,CAAxB,CAAvB;AACA,UAAMC,eAAe,GAAGP,eAAe,CAACE,IAAxC;AAEA,UAAMM,cAAc,GAAGvB,mBAAmB,CAACsB,eAAD,EAAkBhB,QAAlB,CAA1C;AACAF,IAAAA,cAAc,CAACY,cAAD,CAAd;AACAX,IAAAA,eAAe,CAACkB,cAAD,CAAf;AACApB,IAAAA,gBAAgB;AACjB,GAjBD,CAiBE,OAAOqB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CArBD;;AAuBA,eAAezB,YAAf","sourcesContent":["import transformArrayToMap from \"./transformArrayToMap\";\nimport axios from \"axios\";\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats, userData) => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    };\n    const registerResponse = await axios.post(\"http://localhost:8080/chat-user-register\", { name: userData.username }, config);\n    const publicResponse = await axios.get(\"http://localhost:8080/messages/public\", config);\n    const privateResponse = await axios.get(\"http://localhost:8080/messages/private/\" + userData.username, config);\n    const publicChatData = publicResponse.data.map((publicMessage) => ({ ...publicMessage, status: \"MESSAGE\", receiverName: null }));\n    const privateChatData = privateResponse.data;\n\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;\n"]},"metadata":{},"sourceType":"module"}