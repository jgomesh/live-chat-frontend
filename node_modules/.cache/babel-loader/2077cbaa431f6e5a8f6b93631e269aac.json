{"ast":null,"code":"import transformArrayToMap from \"./transformArrayToMap\";\n\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats) => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    };\n    const registerResponse = await axios.post(\"http://localhost:8080/chat-user-register\", {\n      name: userData.username\n    }, config);\n    const publicResponse = await axios.get(\"http://localhost:8080/messages/public\", config);\n    const privateResponse = await axios.get(\"http://localhost:8080/messages/private/\" + userData.username, config);\n    const publicChatData = publicResponse.data.map(publicMessage => ({ ...publicMessage,\n      status: \"MESSAGE\",\n      receiverName: null\n    }));\n    const privateChatData = privateResponse.data;\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;","map":{"version":3,"sources":["/home/jgomesh/WORKWORK/ChatApplication/react-client/src/utils/registerUser.js"],"names":["transformArrayToMap","registerUser","connectWebSocket","setPublicChats","setPrivateChats","config","headers","registerResponse","axios","post","name","userData","username","publicResponse","get","privateResponse","publicChatData","data","map","publicMessage","status","receiverName","privateChatData","MapPrivateChat","error","console","log","message"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,YAAY,GAAG,OAAOC,gBAAP,EAAyBC,cAAzB,EAAyCC,eAAzC,KAA6D;AAChF,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wCAAgC;AAFzB;AADI,KAAf;AAMA,UAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,0CAAX,EAAuD;AAAEC,MAAAA,IAAI,EAAEC,QAAQ,CAACC;AAAjB,KAAvD,EAAoFP,MAApF,CAA/B;AACA,UAAMQ,cAAc,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,uCAAV,EAAmDT,MAAnD,CAA7B;AACA,UAAMU,eAAe,GAAG,MAAMP,KAAK,CAACM,GAAN,CAAU,4CAA4CH,QAAQ,CAACC,QAA/D,EAAyEP,MAAzE,CAA9B;AACA,UAAMW,cAAc,GAAGH,cAAc,CAACI,IAAf,CAAoBC,GAApB,CAAyBC,aAAD,KAAoB,EAAE,GAAGA,aAAL;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,YAAY,EAAE;AAArD,KAApB,CAAxB,CAAvB;AACA,UAAMC,eAAe,GAAGP,eAAe,CAACE,IAAxC;AAEA,UAAMM,cAAc,GAAGvB,mBAAmB,CAACsB,eAAD,EAAkBX,QAAlB,CAA1C;AACAR,IAAAA,cAAc,CAACa,cAAD,CAAd;AACAZ,IAAAA,eAAe,CAACmB,cAAD,CAAf;AACArB,IAAAA,gBAAgB;AACjB,GAjBD,CAiBE,OAAOsB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CArBD;;AAuBA,eAAe1B,YAAf","sourcesContent":["import transformArrayToMap from \"./transformArrayToMap\";\n\nconst registerUser = async (connectWebSocket, setPublicChats, setPrivateChats) => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    };\n    const registerResponse = await axios.post(\"http://localhost:8080/chat-user-register\", { name: userData.username }, config);\n    const publicResponse = await axios.get(\"http://localhost:8080/messages/public\", config);\n    const privateResponse = await axios.get(\"http://localhost:8080/messages/private/\" + userData.username, config);\n    const publicChatData = publicResponse.data.map((publicMessage) => ({ ...publicMessage, status: \"MESSAGE\", receiverName: null }));\n    const privateChatData = privateResponse.data;\n\n    const MapPrivateChat = transformArrayToMap(privateChatData, userData);\n    setPublicChats(publicChatData);\n    setPrivateChats(MapPrivateChat);\n    connectWebSocket();\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default registerUser;\n"]},"metadata":{},"sourceType":"module"}